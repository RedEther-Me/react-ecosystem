version: 2.0

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  api-gateway-service:
    type: boolean
    default: false
  auth-service:
    type: boolean
    default: false
  server-utils:
    type: boolean
    default: false
  components:
    type: boolean
    default: false
  ui:
    type: boolean
    default: false

executors:
  node:
    docker:
      - image: circleci/node:7.10

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run: chmod +x ./circle_trigger.sh && ./circle_trigger.sh

  build:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      # This step is added only to show that we are in the package directory
      - run:
          name: Content
          command: |
            cat README.md
            echo "<< parameters.package_name >> built." > build.txt
      - run:
          name: Build
          command: echo "Build << parameters.package_name >> ..."
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/<< parameters.package_name >>

  deploy:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - attach_workspace:
          at: ~/project
      # This step is added to show that files are available from the build job.
      - run:
          name: Content to deploy
          command: ls && cat build.txt
      - deploy:
          name: Deploy
          command: echo "Deploying << parameters.package_name >> ..."

workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  api-gateway-service:
    when: << pipeline.parameters.api-gateway-service >>
    jobs:
      - build:
          name: api-gateway-service-build
          package_name: api-gateway-service
      - deploy:
          name: api-gateway-service-deploy
          package_name: api-gateway-service
          requires:
            - api-gateway-service-build

  auth-service:
    when: << pipeline.parameters.auth-service >>
    jobs:
      - build:
          name: auth-service-build
          package_name: auth-service
      - deploy:
          name: auth-service-deploy
          package_name: auth-service
          requires:
            - auth-service-build

  server-utils:
    when: << pipeline.parameters.server-utils >>
    jobs:
      - build:
          name: server-utils-build
          package_name: server-utils
      - deploy:
          name: server-utils-deploy
          package_name: server-utils
          requires:
            - server-utils-build

  components:
    when: << pipeline.parameters.components >>
    jobs:
      - build:
          name: components-build
          package_name: components
      - deploy:
          name: components-deploy
          package_name: components
          requires:
            - components-build

  ui:
    when: << pipeline.parameters.ui >>
    jobs:
      - build:
          name: ui-build
          package_name: ui
      - deploy:
          name: ui-deploy
          package_name: ui
          requires:
            - ui-build
